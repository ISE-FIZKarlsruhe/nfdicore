Prefix(:=<https://nfdi.fiz-karlsruhe.de/ontology/>)
Prefix(dce:=<http://purl.org/dc/elements/1.1/>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)
Prefix(dcterms:=<http://purl.org/dc/terms/>)


Ontology(<https://nfdi.fiz-karlsruhe.de/ontology/nfdicore/components/nfdicore-extension.owl>
Import(<https://nfdi.fiz-karlsruhe.de/ontology/nfdicore/components/nfdicore-main.owl>)
Import(<https://nfdi.fiz-karlsruhe.de/ontology/nfdicore/imports/schema_import.owl>)
Annotation(dcterms:description "This module extends nfdicore main module with axioms for simplification in data querying and ease of use. This module also contains SWRL rules."@en)
Annotation(dcterms:title "Extension module of NFDIcore ontology"@en)

Declaration(Class(:Collection))
Declaration(Class(:NFDI_0000101))
Declaration(Class(:ProgrammingLanguage))
Declaration(Class(:TechnologicalMeans))
Declaration(ObjectProperty(<http://purl.obolibrary.org/obo/BFO_0000050>))
Declaration(ObjectProperty(<http://purl.obolibrary.org/obo/BFO_0000051>))
Declaration(ObjectProperty(<http://purl.obolibrary.org/obo/RO_0000056>))
Declaration(ObjectProperty(<http://purl.obolibrary.org/obo/RO_0000057>))
Declaration(ObjectProperty(<http://purl.obolibrary.org/obo/RO_0001015>))
Declaration(ObjectProperty(<http://purl.obolibrary.org/obo/RO_0001025>))
Declaration(ObjectProperty(:NFDI_0000100))
Declaration(ObjectProperty(:bestPractice))
Declaration(ObjectProperty(:bestPracticeOf))
Declaration(ObjectProperty(:contactPoint))
Declaration(ObjectProperty(:contactPointOf))
Declaration(ObjectProperty(:contributor))
Declaration(ObjectProperty(:contributorOf))
Declaration(ObjectProperty(:country))
Declaration(ObjectProperty(:countryOf))
Declaration(ObjectProperty(:dataset))
Declaration(ObjectProperty(:datasetOf))
Declaration(ObjectProperty(:exportFormat))
Declaration(ObjectProperty(:exportFormatOf))
Declaration(ObjectProperty(:federalState))
Declaration(ObjectProperty(:federalStateOf))
Declaration(ObjectProperty(:fundingOrganization))
Declaration(ObjectProperty(:fundingOrganizationOf))
Declaration(ObjectProperty(:license))
Declaration(ObjectProperty(:licenseOf))
Declaration(ObjectProperty(:location))
Declaration(ObjectProperty(:locationOf))
Declaration(ObjectProperty(:mediaType))
Declaration(ObjectProperty(:mediaTypeOf))
Declaration(ObjectProperty(:member))
Declaration(ObjectProperty(:memberOf))
Declaration(ObjectProperty(:parentOrganization))
Declaration(ObjectProperty(:part))
Declaration(ObjectProperty(:partOf))
Declaration(ObjectProperty(:participant))
Declaration(ObjectProperty(:participantOf))
Declaration(ObjectProperty(:partnerOrganization))
Declaration(ObjectProperty(:programmingLanguage))
Declaration(ObjectProperty(:programmingLanguageOf))
Declaration(ObjectProperty(:publisher))
Declaration(ObjectProperty(:publisherOf))
Declaration(ObjectProperty(:relatedProject))
Declaration(ObjectProperty(:representedCollection))
Declaration(ObjectProperty(:representedCollectionOf))
Declaration(ObjectProperty(:software))
Declaration(ObjectProperty(:softwareOf))
Declaration(ObjectProperty(:sparqlEndpoint))
Declaration(ObjectProperty(:sparqlEndpointOf))
Declaration(ObjectProperty(:specification))
Declaration(ObjectProperty(:specificationOf))
Declaration(ObjectProperty(:standard))
Declaration(ObjectProperty(:standardOf))
Declaration(ObjectProperty(:subjectArea))
Declaration(ObjectProperty(:subjectAreaOf))
Declaration(ObjectProperty(:subsidiaryOrganization))
Declaration(ObjectProperty(:technology))
Declaration(ObjectProperty(:technologyOf))
Declaration(ObjectProperty(:url))
Declaration(ObjectProperty(:urlOf))
Declaration(DataProperty(:birthDate))
Declaration(DataProperty(:deathDate))
Declaration(DataProperty(:dissolutionDate))
Declaration(DataProperty(:emailAddress))
Declaration(DataProperty(:endDate))
Declaration(DataProperty(:fileExtension))
Declaration(DataProperty(:foundationDate))
Declaration(DataProperty(:startDate))

############################
#   Object Properties
############################

# Object Property: <http://purl.obolibrary.org/obo/BFO_0000050> (part of)

AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000111> <http://purl.obolibrary.org/obo/BFO_0000050> "is part of"@en)
AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000112> <http://purl.obolibrary.org/obo/BFO_0000050> "my brain is part of my body (continuant parthood, two material entities)"@en)
AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000112> <http://purl.obolibrary.org/obo/BFO_0000050> "my stomach cavity is part of my stomach (continuant parthood, immaterial entity is part of material entity)"@en)
AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000112> <http://purl.obolibrary.org/obo/BFO_0000050> "this day is part of this year (occurrent parthood)"@en)
AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000115> <http://purl.obolibrary.org/obo/BFO_0000050> "a core relation that holds between a part and its whole"@en)
AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000116> <http://purl.obolibrary.org/obo/BFO_0000050> "Everything is part of itself. Any part of any part of a thing is itself part of that thing. Two distinct things cannot be part of each other."@en)
AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000116> <http://purl.obolibrary.org/obo/BFO_0000050> "Occurrents are not subject to change and so parthood between occurrents holds for all the times that the part exists. Many continuants are subject to change, so parthood between continuants will only hold at certain times, but this is difficult to specify in OWL. See http://purl.obolibrary.org/obo/ro/docs/temporal-semantics/"@en)
AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000116> <http://purl.obolibrary.org/obo/BFO_0000050> "Occurrents are not subject to change and so parthood between occurrents holds for all the times that the part exists. Many continuants are subject to change, so parthood between continuants will only hold at certain times, but this is difficult to specify in OWL. See https://code.google.com/p/obo-relations/wiki/ROAndTime"@en)
AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000116> <http://purl.obolibrary.org/obo/BFO_0000050> "Parthood requires the part and the whole to have compatible classes: only an occurrent can be part of an occurrent; only a process can be part of a process; only a continuant can be part of a continuant; only an independent continuant can be part of an independent continuant; only an immaterial entity can be part of an immaterial entity; only a specifically dependent continuant can be part of a specifically dependent continuant; only a generically dependent continuant can be part of a generically dependent continuant. (This list is not exhaustive.)

A continuant cannot be part of an occurrent: use 'participates in'. An occurrent cannot be part of a continuant: use 'has participant'. A material entity cannot be part of an immaterial entity: use 'has location'. A specifically dependent continuant cannot be part of an independent continuant: use 'inheres in'. An independent continuant cannot be part of a specifically dependent continuant: use 'bearer of'."@en)
AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000118> <http://purl.obolibrary.org/obo/BFO_0000050> "part_of"@en)
AnnotationAssertion(<http://purl.obolibrary.org/obo/RO_0001900> <http://purl.obolibrary.org/obo/BFO_0000050> <http://purl.obolibrary.org/obo/RO_0001901>)
AnnotationAssertion(rdfs:label <http://purl.obolibrary.org/obo/BFO_0000050> "part of"@en)
AnnotationAssertion(rdfs:seeAlso <http://purl.obolibrary.org/obo/BFO_0000050> "http://www.obofoundry.org/ro/#OBO_REL:part_of")
EquivalentObjectProperties(<http://purl.obolibrary.org/obo/BFO_0000050> :partOf)
InverseObjectProperties(<http://purl.obolibrary.org/obo/BFO_0000050> <http://purl.obolibrary.org/obo/BFO_0000051>)
TransitiveObjectProperty(<http://purl.obolibrary.org/obo/BFO_0000050>)

# Object Property: <http://purl.obolibrary.org/obo/BFO_0000051> (has part)

AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000111> <http://purl.obolibrary.org/obo/BFO_0000051> "has part"@en)
AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000112> <http://purl.obolibrary.org/obo/BFO_0000051> "my body has part my brain (continuant parthood, two material entities)"@en)
AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000112> <http://purl.obolibrary.org/obo/BFO_0000051> "my stomach has part my stomach cavity (continuant parthood, material entity has part immaterial entity)"@en)
AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000112> <http://purl.obolibrary.org/obo/BFO_0000051> "this year has part this day (occurrent parthood)"@en)
AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000115> <http://purl.obolibrary.org/obo/BFO_0000051> "a core relation that holds between a whole and its part"@en)
AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000116> <http://purl.obolibrary.org/obo/BFO_0000051> "Everything has itself as a part. Any part of any part of a thing is itself part of that thing. Two distinct things cannot have each other as a part."@en)
AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000116> <http://purl.obolibrary.org/obo/BFO_0000051> "Occurrents are not subject to change and so parthood between occurrents holds for all the times that the part exists. Many continuants are subject to change, so parthood between continuants will only hold at certain times, but this is difficult to specify in OWL. See http://purl.obolibrary.org/obo/ro/docs/temporal-semantics/"@en)
AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000116> <http://purl.obolibrary.org/obo/BFO_0000051> "Occurrents are not subject to change and so parthood between occurrents holds for all the times that the part exists. Many continuants are subject to change, so parthood between continuants will only hold at certain times, but this is difficult to specify in OWL. See https://code.google.com/p/obo-relations/wiki/ROAndTime"@en)
AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000116> <http://purl.obolibrary.org/obo/BFO_0000051> "Parthood requires the part and the whole to have compatible classes: only an occurrent have an occurrent as part; only a process can have a process as part; only a continuant can have a continuant as part; only an independent continuant can have an independent continuant as part; only a specifically dependent continuant can have a specifically dependent continuant as part; only a generically dependent continuant can have a generically dependent continuant as part. (This list is not exhaustive.)

A continuant cannot have an occurrent as part: use 'participates in'. An occurrent cannot have a continuant as part: use 'has participant'. An immaterial entity cannot have a material entity as part: use 'location of'. An independent continuant cannot have a specifically dependent continuant as part: use 'bearer of'. A specifically dependent continuant cannot have an independent continuant as part: use 'inheres in'."@en)
AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000118> <http://purl.obolibrary.org/obo/BFO_0000051> "has_part"@en)
AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000412> <http://purl.obolibrary.org/obo/BFO_0000051> <http://purl.obolibrary.org/obo/iao.owl>)
AnnotationAssertion(<http://purl.obolibrary.org/obo/RO_0001900> <http://purl.obolibrary.org/obo/BFO_0000051> <http://purl.obolibrary.org/obo/RO_0001901>)
AnnotationAssertion(rdfs:label <http://purl.obolibrary.org/obo/BFO_0000051> "has part"@en)
EquivalentObjectProperties(<http://purl.obolibrary.org/obo/BFO_0000051> :part)
TransitiveObjectProperty(<http://purl.obolibrary.org/obo/BFO_0000051>)

# Object Property: <http://purl.obolibrary.org/obo/RO_0000056> (participates in)

AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000111> <http://purl.obolibrary.org/obo/RO_0000056> "participates in"@en)
AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000112> <http://purl.obolibrary.org/obo/RO_0000056> "this blood clot participates in this blood coagulation"@en)
AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000112> <http://purl.obolibrary.org/obo/RO_0000056> "this input material (or this output material) participates in this process"@en)
AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000112> <http://purl.obolibrary.org/obo/RO_0000056> "this investigator participates in this investigation"@en)
AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000115> <http://purl.obolibrary.org/obo/RO_0000056> "a relation between a continuant and a process, in which the continuant is somehow involved in the process"@en)
AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000118> <http://purl.obolibrary.org/obo/RO_0000056> "participates_in"@en)
AnnotationAssertion(rdfs:label <http://purl.obolibrary.org/obo/RO_0000056> "participates in"@en)
EquivalentObjectProperties(<http://purl.obolibrary.org/obo/RO_0000056> :participantOf)
InverseObjectProperties(<http://purl.obolibrary.org/obo/RO_0000056> <http://purl.obolibrary.org/obo/RO_0000057>)
ObjectPropertyDomain(<http://purl.obolibrary.org/obo/RO_0000056> <http://purl.obolibrary.org/obo/BFO_0000002>)
ObjectPropertyRange(<http://purl.obolibrary.org/obo/RO_0000056> <http://purl.obolibrary.org/obo/BFO_0000003>)

# Object Property: <http://purl.obolibrary.org/obo/RO_0000057> (has participant)

AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000111> <http://purl.obolibrary.org/obo/RO_0000057> "has participant"@en)
AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000112> <http://purl.obolibrary.org/obo/RO_0000057> "this blood coagulation has participant this blood clot"@en)
AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000112> <http://purl.obolibrary.org/obo/RO_0000057> "this investigation has participant this investigator"@en)
AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000112> <http://purl.obolibrary.org/obo/RO_0000057> "this process has participant this input material (or this output material)"@en)
AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000115> <http://purl.obolibrary.org/obo/RO_0000057> "a relation between a process and a continuant, in which the continuant is somehow involved in the process"@en)
AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000116> <http://purl.obolibrary.org/obo/RO_0000057> "Has_participant is a primitive instance-level relation between a process, a continuant, and a time at which the continuant participates in some way in the process. The relation obtains, for example, when this particular process of oxygen exchange across this particular alveolar membrane has_participant this particular sample of hemoglobin at this particular time."@en)
AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000118> <http://purl.obolibrary.org/obo/RO_0000057> "has_participant"@en)
AnnotationAssertion(dce:source <http://purl.obolibrary.org/obo/RO_0000057> "http://www.obofoundry.org/ro/#OBO_REL:has_participant")
AnnotationAssertion(rdfs:label <http://purl.obolibrary.org/obo/RO_0000057> "has participant"@en)
EquivalentObjectProperties(<http://purl.obolibrary.org/obo/RO_0000057> :participant)
ObjectPropertyDomain(<http://purl.obolibrary.org/obo/RO_0000057> <http://purl.obolibrary.org/obo/BFO_0000003>)
ObjectPropertyRange(<http://purl.obolibrary.org/obo/RO_0000057> <http://purl.obolibrary.org/obo/BFO_0000002>)

# Object Property: <http://purl.obolibrary.org/obo/RO_0001015> (location of)

AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000111> <http://purl.obolibrary.org/obo/RO_0001015> "is location of"@en)
AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000112> <http://purl.obolibrary.org/obo/RO_0001015> "my head is the location of my brain"@en)
AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000112> <http://purl.obolibrary.org/obo/RO_0001015> "this cage is the location of this rat"@en)
AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000115> <http://purl.obolibrary.org/obo/RO_0001015> "a relation between two independent continuants, the location and the target, in which the target is entirely within the location"@en)
AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000116> <http://purl.obolibrary.org/obo/RO_0001015> "Most location relations will only hold at certain times, but this is difficult to specify in OWL. See http://purl.obolibrary.org/obo/ro/docs/temporal-semantics/"@en)
AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000116> <http://purl.obolibrary.org/obo/RO_0001015> "Most location relations will only hold at certain times, but this is difficult to specify in OWL. See https://code.google.com/p/obo-relations/wiki/ROAndTime"@en)
AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000118> <http://purl.obolibrary.org/obo/RO_0001015> "location_of"@en)
AnnotationAssertion(<http://purl.obolibrary.org/obo/RO_0001900> <http://purl.obolibrary.org/obo/RO_0001015> <http://purl.obolibrary.org/obo/RO_0001901>)
AnnotationAssertion(rdfs:label <http://purl.obolibrary.org/obo/RO_0001015> "location of"@en)
EquivalentObjectProperties(<http://purl.obolibrary.org/obo/RO_0001015> :locationOf)
InverseObjectProperties(<http://purl.obolibrary.org/obo/RO_0001015> <http://purl.obolibrary.org/obo/RO_0001025>)
TransitiveObjectProperty(<http://purl.obolibrary.org/obo/RO_0001015>)

# Object Property: <http://purl.obolibrary.org/obo/RO_0001025> (located in)

AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000111> <http://purl.obolibrary.org/obo/RO_0001025> "located in"@en)
AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000112> <http://purl.obolibrary.org/obo/RO_0001025> "my brain is located in my head"@en)
AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000112> <http://purl.obolibrary.org/obo/RO_0001025> "this rat is located in this cage"@en)
AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000115> <http://purl.obolibrary.org/obo/RO_0001025> "a relation between two independent continuants, the target and the location, in which the target is entirely within the location"@en)
AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000116> <http://purl.obolibrary.org/obo/RO_0001025> "Location as a relation between instances: The primitive instance-level relation c located_in r at t reflects the fact that each continuant is at any given time associated with exactly one spatial region, namely its exact location. Following we can use this relation to define a further instance-level location relation - not between a continuant and the region which it exactly occupies, but rather between one continuant and another. c is located in c1, in this sense, whenever the spatial region occupied by c is part_of the spatial region occupied by c1.    Note that this relation comprehends both the relation of exact location between one continuant and another which obtains when r and r1 are identical (for example, when a portion of fluid exactly fills a cavity), as well as those sorts of inexact location relations which obtain, for example, between brain and head or between ovum and uterus"@en)
AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000116> <http://purl.obolibrary.org/obo/RO_0001025> "Most location relations will only hold at certain times, but this is difficult to specify in OWL. See http://purl.obolibrary.org/obo/ro/docs/temporal-semantics/"@en)
AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000116> <http://purl.obolibrary.org/obo/RO_0001025> "Most location relations will only hold at certain times, but this is difficult to specify in OWL. See https://code.google.com/p/obo-relations/wiki/ROAndTime"@en)
AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000118> <http://purl.obolibrary.org/obo/RO_0001025> "located_in"@en)
AnnotationAssertion(<http://purl.obolibrary.org/obo/RO_0001900> <http://purl.obolibrary.org/obo/RO_0001025> <http://purl.obolibrary.org/obo/RO_0001901>)
AnnotationAssertion(dce:source <http://purl.obolibrary.org/obo/RO_0001025> "http://www.obofoundry.org/ro/#OBO_REL:located_in")
AnnotationAssertion(rdfs:label <http://purl.obolibrary.org/obo/RO_0001025> "located in"@en)
EquivalentObjectProperties(<http://purl.obolibrary.org/obo/RO_0001025> :location)
TransitiveObjectProperty(<http://purl.obolibrary.org/obo/RO_0001025>)
ObjectPropertyDomain(Annotation(<http://purl.obolibrary.org/obo/IAO_0000116> "This is redundant with the more specific 'independent and not spatial region' constraint. We leave in the redundant axiom for use with reasoners that do not use negation.") <http://purl.obolibrary.org/obo/RO_0001025> <http://purl.obolibrary.org/obo/BFO_0000004>)
ObjectPropertyDomain(<http://purl.obolibrary.org/obo/RO_0001025> ObjectIntersectionOf(<http://purl.obolibrary.org/obo/BFO_0000004> ObjectComplementOf(<http://purl.obolibrary.org/obo/BFO_0000006>)))
ObjectPropertyRange(Annotation(<http://purl.obolibrary.org/obo/IAO_0000116> "This is redundant with the more specific 'independent and not spatial region' constraint. We leave in the redundant axiom for use with reasoners that do not use negation.") <http://purl.obolibrary.org/obo/RO_0001025> <http://purl.obolibrary.org/obo/BFO_0000004>)
ObjectPropertyRange(<http://purl.obolibrary.org/obo/RO_0001025> ObjectIntersectionOf(<http://purl.obolibrary.org/obo/BFO_0000004> ObjectComplementOf(<http://purl.obolibrary.org/obo/BFO_0000006>)))

# Object Property: :bestPractice (has best practice)

AnnotationAssertion(rdfs:comment :bestPractice "The property is a relationship between a resource and the specified best practice."@en)
AnnotationAssertion(rdfs:isDefinedBy :bestPractice <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :bestPractice "has best practice"@en)
InverseObjectProperties(:bestPractice :bestPracticeOf)
ObjectPropertyDomain(:bestPractice :Resource)
ObjectPropertyRange(:bestPractice :Specification)

# Object Property: :bestPracticeOf (best practice of)

AnnotationAssertion(rdfs:comment :bestPracticeOf "inverse of  property \"best practice\""@en)
AnnotationAssertion(rdfs:isDefinedBy :bestPracticeOf <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :bestPracticeOf "best practice of"@en)

# Object Property: :contactPoint (has contact point)

AnnotationAssertion(rdfs:comment :contactPoint "The property is a relationship between a resource and a contact point."@en)
AnnotationAssertion(rdfs:isDefinedBy :contactPoint <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :contactPoint "has contact point"@en)
InverseObjectProperties(:contactPoint :contactPointOf)
ObjectPropertyDomain(:contactPoint ObjectUnionOf(:Project :Resource))
ObjectPropertyRange(:contactPoint :Agent)

# Object Property: :contactPointOf (contact point of)

AnnotationAssertion(rdfs:comment :contactPointOf "inverse of  property \"contact point\""@en)
AnnotationAssertion(rdfs:isDefinedBy :contactPointOf <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :contactPointOf "contact point of"@en)

# Object Property: :contributor (has contributor)

AnnotationAssertion(rdfs:comment :contributor "The property related a resource to a person or an organization responsible for making contributions to a resource."@en)
AnnotationAssertion(rdfs:isDefinedBy :contributor <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :contributor "has contributor"@en)
InverseObjectProperties(:contributor :contributorOf)
ObjectPropertyDomain(:contributor :Resource)
ObjectPropertyRange(:contributor :Agent)

# Object Property: :contributorOf (contributor of)

AnnotationAssertion(rdfs:comment :contributorOf "inverse of property \"contributor\""@en)
AnnotationAssertion(rdfs:isDefinedBy :contributorOf <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :contributorOf "contributor of"@en)

# Object Property: :country (of country)

AnnotationAssertion(rdfs:comment :country "The property relates a city or a state to a country where it is located."@en)
AnnotationAssertion(rdfs:isDefinedBy :country <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :country "of country"@en)
SubObjectPropertyOf(:country :partOf)
InverseObjectProperties(:country :countryOf)
ObjectPropertyDomain(:country ObjectUnionOf(:City :FederalState))
ObjectPropertyRange(:country :Country)

# Object Property: :countryOf (country of)

AnnotationAssertion(rdfs:comment :countryOf "inverse of property \"country\""@en)
AnnotationAssertion(rdfs:isDefinedBy :countryOf <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :countryOf "country of"@en)
SubObjectPropertyOf(:countryOf :part)

# Object Property: :dataset (has data set)

AnnotationAssertion(rdfs:comment :dataset "The property is a relation between a resource and a data set."@en)
AnnotationAssertion(rdfs:isDefinedBy :dataset <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :dataset "has data set"@en)
SubObjectPropertyOf(:dataset :NFDI_0000100)
InverseObjectProperties(:dataset :datasetOf)
ObjectPropertyDomain(:dataset :Resource)
ObjectPropertyRange(:dataset :Dataset)

# Object Property: :datasetOf (data set of)

AnnotationAssertion(rdfs:comment :datasetOf "inverse of  property \"data set\""@en)
AnnotationAssertion(rdfs:isDefinedBy :datasetOf <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :datasetOf "data set of"@en)
SubObjectPropertyOf(:datasetOf <http://purl.obolibrary.org/obo/IAO_0000136>)

# Object Property: :exportFormat (has export format)

AnnotationAssertion(rdfs:comment :exportFormat "The property relates a resource to the format available for the export of a resource."@en)
AnnotationAssertion(rdfs:isDefinedBy :exportFormat <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :exportFormat "has export format"@en)
InverseObjectProperties(:exportFormat :exportFormatOf)
ObjectPropertyDomain(:exportFormat :Resource)
ObjectPropertyRange(:exportFormat :MediaType)

# Object Property: :exportFormatOf (export format of)

AnnotationAssertion(rdfs:comment :exportFormatOf "inverse of  property \"export format\""@en)
AnnotationAssertion(rdfs:isDefinedBy :exportFormatOf <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :exportFormatOf "export format of"@en)

# Object Property: :federalState (of federal state)

AnnotationAssertion(rdfs:comment :federalState "The property relates a city to a federal state where it is located."@en)
AnnotationAssertion(rdfs:isDefinedBy :federalState <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :federalState "of federal state"@en)
SubObjectPropertyOf(:federalState :partOf)
InverseObjectProperties(:federalState :federalStateOf)
ObjectPropertyDomain(:federalState :City)
ObjectPropertyRange(:federalState :FederalState)

# Object Property: :federalStateOf (federal state of)

AnnotationAssertion(rdfs:comment :federalStateOf "inverse of property \"federal state\""@en)
AnnotationAssertion(rdfs:isDefinedBy :federalStateOf <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :federalStateOf "federal state of"@en)
SubObjectPropertyOf(:federalStateOf :part)

# Object Property: :fundingOrganization (has funding organization)

AnnotationAssertion(rdfs:comment :fundingOrganization "The property relates a project to the organization that provided funding for it."@en)
AnnotationAssertion(rdfs:isDefinedBy :fundingOrganization <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :fundingOrganization "has funding organization"@en)
InverseObjectProperties(:fundingOrganization :fundingOrganizationOf)
ObjectPropertyDomain(:fundingOrganization :Project)
ObjectPropertyRange(:fundingOrganization :Organization)

# Object Property: :fundingOrganizationOf (funding organization of)

AnnotationAssertion(rdfs:comment :fundingOrganizationOf "inverse of property \"funding organization\""@en)
AnnotationAssertion(rdfs:isDefinedBy :fundingOrganizationOf <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :fundingOrganizationOf "funding organization of"@en)
ObjectPropertyDomain(:fundingOrganizationOf :Organization)
ObjectPropertyRange(:fundingOrganizationOf :Project)

# Object Property: :license (has license)

AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000116> :license "2024-04-09. Sasha Bruns: Following e.g. the Software Ontology (SWO), relations between two ICE are categorized under the overarching property \"is about.\" Consequently, inverse properties become subproperties of a single superproperty (see e.g. swo:is_license_for and swo:has_license).")
AnnotationAssertion(rdfs:comment :license "The property is a relationship between a resource and a license file.")
AnnotationAssertion(rdfs:isDefinedBy :license <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :license "has license"@en)
SubObjectPropertyOf(:license :NFDI_0000100)
InverseObjectProperties(:license :licenseOf)
ObjectPropertyDomain(:license :Resource)
ObjectPropertyRange(:license :License)

# Object Property: :licenseOf (license of)

AnnotationAssertion(rdfs:comment :licenseOf "inverse of property \"license\""@en)
AnnotationAssertion(rdfs:isDefinedBy :licenseOf <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :licenseOf "license of"@en)
SubObjectPropertyOf(:licenseOf <http://purl.obolibrary.org/obo/IAO_0000136>)

# Object Property: :location (has location)

AnnotationAssertion(rdfs:comment :location "The property is a relationship between a thing and a place its located at. "@en)
AnnotationAssertion(rdfs:isDefinedBy :location <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :location "has location"@en)
InverseObjectProperties(:location :locationOf)

# Object Property: :locationOf (location of)

AnnotationAssertion(rdfs:comment :locationOf "inverse of property \"location\""@en)
AnnotationAssertion(rdfs:isDefinedBy :locationOf <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :locationOf "location of"@en)

# Object Property: :mediaType (has media type)

AnnotationAssertion(rdfs:comment :mediaType "The property relates a resource to its data format."@en)
AnnotationAssertion(rdfs:isDefinedBy :mediaType <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :mediaType "has media type"@en)
SubObjectPropertyOf(:mediaType :NFDI_0000100)
InverseObjectProperties(:mediaType :mediaTypeOf)
ObjectPropertyDomain(:mediaType :Resource)
ObjectPropertyRange(:mediaType :MediaType)

# Object Property: :mediaTypeOf (media type of)

AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000116> :mediaTypeOf "2024-04-09. Sasha Bruns: Following e.g. the Software Ontology (SWO), relations between two ICE are categorized under the overarching property \"is about.\" Consequently, inverse properties become subproperties of a single superproperty (see e.g. swo:is_license_for and swo:has_license)."@en)
AnnotationAssertion(rdfs:comment :mediaTypeOf "inverse of  property \"media type\""@en)
AnnotationAssertion(rdfs:isDefinedBy :mediaTypeOf <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :mediaTypeOf "media type of"@en)
SubObjectPropertyOf(:mediaTypeOf <http://purl.obolibrary.org/obo/IAO_0000136>)

# Object Property: :member (member)

AnnotationAssertion(rdfs:comment :member "The property is a relationship between a consortium and an organization that is a member of the consortium."@en)
AnnotationAssertion(rdfs:isDefinedBy :member <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :member "member"@en)
SubObjectPropertyOf(:member :part)
InverseObjectProperties(:member :memberOf)

# Object Property: :memberOf (member of)

AnnotationAssertion(rdfs:comment :memberOf "The property is a relationship between an organization and a consortium it belongs to."@en)
AnnotationAssertion(rdfs:comment :memberOf "inverse of property \"member\""@en)
AnnotationAssertion(rdfs:isDefinedBy :memberOf <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :memberOf "member of"@en)
SubObjectPropertyOf(:memberOf :partOf)

# Object Property: :parentOrganization (has parent organization)

AnnotationAssertion(rdfs:comment :parentOrganization "The property is a parental relationship between organizations."@en)
AnnotationAssertion(rdfs:isDefinedBy :parentOrganization <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :parentOrganization "has parent organization"@en)
InverseObjectProperties(:parentOrganization :subsidiaryOrganization)

# Object Property: :part (has part)

AnnotationAssertion(rdfs:comment :part "The generic property is a relationship between a thing and its part."@en)
AnnotationAssertion(rdfs:isDefinedBy :part <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :part "has part"@en)
InverseObjectProperties(:part :partOf)

# Object Property: :partOf (part of)

AnnotationAssertion(rdfs:comment :partOf "The generic property is a relationship between a thing and a thing in which it is physically or logically included."@en)
AnnotationAssertion(rdfs:isDefinedBy :partOf <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :partOf "part of"@en)

# Object Property: :participant (has participant)

AnnotationAssertion(rdfs:comment :participant "The property is a relationship between a project and an agent that participates in the project."@en)
AnnotationAssertion(rdfs:isDefinedBy :participant <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :participant "has participant"@en)
InverseObjectProperties(:participant :participantOf)

# Object Property: :participantOf (participant of)

AnnotationAssertion(rdfs:comment :participantOf "inverse of  property \"participant\""@en)
AnnotationAssertion(rdfs:isDefinedBy :participantOf <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :participantOf "participant of"@en)

# Object Property: :partnerOrganization (has partner organization)

AnnotationAssertion(rdfs:comment :partnerOrganization "The property is a partner relationship between organizations. The property is symmetric."@en)
AnnotationAssertion(rdfs:isDefinedBy :partnerOrganization <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :partnerOrganization "has partner organization"@en)
SymmetricObjectProperty(:partnerOrganization)
ObjectPropertyDomain(:partnerOrganization :Organization)
ObjectPropertyRange(:partnerOrganization :Organization)

# Object Property: :programmingLanguage (has programming language)

AnnotationAssertion(rdfs:comment :programmingLanguage "The property links software to a programming language its written in.")
AnnotationAssertion(rdfs:isDefinedBy :programmingLanguage <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :programmingLanguage "has programming language"@en)
SubObjectPropertyOf(:programmingLanguage :NFDI_0000100)
InverseObjectProperties(:programmingLanguage :programmingLanguageOf)
ObjectPropertyDomain(:programmingLanguage :Software)
ObjectPropertyRange(:programmingLanguage :ProgrammingLanguage)

# Object Property: :programmingLanguageOf (programming language of)

AnnotationAssertion(rdfs:comment :programmingLanguageOf "inverse of  property \"programming language\""@en)
AnnotationAssertion(rdfs:isDefinedBy :programmingLanguageOf <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :programmingLanguageOf "programming language of"@en)
SubObjectPropertyOf(:programmingLanguageOf <http://purl.obolibrary.org/obo/IAO_0000136>)

# Object Property: :publisher (has publisher)

AnnotationAssertion(rdfs:comment :publisher "The property is a relationship between a resource and an organization or a person responsible for publishing it."@en)
AnnotationAssertion(rdfs:isDefinedBy :publisher <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :publisher "has publisher"@en)
InverseObjectProperties(:publisher :publisherOf)
ObjectPropertyDomain(:publisher :Resource)
ObjectPropertyRange(:publisher :Agent)

# Object Property: :publisherOf (publisher of)

AnnotationAssertion(rdfs:comment :publisherOf "inverse of  property \"publisher\""@en)
AnnotationAssertion(rdfs:isDefinedBy :publisherOf <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :publisherOf "publisher of"@en)

# Object Property: :relatedProject (has related project)

AnnotationAssertion(rdfs:comment :relatedProject "The property is a relationship between a project or a resource and related projects."@en)
AnnotationAssertion(rdfs:isDefinedBy :relatedProject <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :relatedProject "has related project"@en)
ObjectPropertyDomain(:relatedProject ObjectUnionOf(:Project :Resource))
ObjectPropertyRange(:relatedProject :Project)

# Object Property: :representedCollection (has represented collection)

AnnotationAssertion(rdfs:comment :representedCollection "The property is a relationship between a dataset and a collection it represents."@en)
AnnotationAssertion(rdfs:isDefinedBy :representedCollection <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :representedCollection "has represented collection"@en)
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#example> :representedCollection "a dataportal is about some collection of pieces of art")
SubObjectPropertyOf(:representedCollection <http://purl.obolibrary.org/obo/IAO_0000219>)
InverseObjectProperties(:representedCollection :representedCollectionOf)
ObjectPropertyDomain(:representedCollection ObjectUnionOf(:DataPortal :Dataset))
ObjectPropertyRange(:representedCollection :Collection)

# Object Property: :representedCollectionOf (represented collection of)

AnnotationAssertion(rdfs:comment :representedCollectionOf "inverse of  property \"represented collection\""@en)
AnnotationAssertion(rdfs:isDefinedBy :representedCollectionOf <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :representedCollectionOf "represented collection of"@en)
SubObjectPropertyOf(:representedCollectionOf <http://purl.obolibrary.org/obo/IAO_0000235>)

# Object Property: :software (has software)

AnnotationAssertion(rdfs:comment :software "The property is a relationship between a resource and a software it uses."@en)
AnnotationAssertion(rdfs:isDefinedBy :software <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :software "has software"@en)
SubObjectPropertyOf(:software :NFDI_0000100)
InverseObjectProperties(:software :softwareOf)
ObjectPropertyDomain(:software :Resource)
ObjectPropertyRange(:software :Software)

# Object Property: :softwareOf (software of)

AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000116> :softwareOf "2024-04-09. Sasha Bruns: Following e.g. the Software Ontology (SWO), relations between two ICE are categorized under the overarching property \"is about.\" Consequently, inverse properties become subproperties of a single superproperty (see e.g. swo:is_license_for and swo:has_license)."@en)
AnnotationAssertion(rdfs:comment :softwareOf "inverse of  property \"sofware\""@en)
AnnotationAssertion(rdfs:isDefinedBy :softwareOf <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :softwareOf "software of"@en)
SubObjectPropertyOf(:softwareOf <http://purl.obolibrary.org/obo/IAO_0000136>)

# Object Property: :sparqlEndpoint (has sparql endpoint)

AnnotationAssertion(rdfs:comment :sparqlEndpoint "The property relates a data resource to its SPARQL Endpoint. "@en)
AnnotationAssertion(rdfs:isDefinedBy :sparqlEndpoint <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :sparqlEndpoint "has sparql endpoint"@en)
SubObjectPropertyOf(:sparqlEndpoint :NFDI_0000100)
InverseObjectProperties(:sparqlEndpoint :sparqlEndpointOf)
ObjectPropertyDomain(:sparqlEndpoint :Resource)
ObjectPropertyRange(:sparqlEndpoint :Resource)

# Object Property: :sparqlEndpointOf (sparql endpoint of)

AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000116> :sparqlEndpointOf "2024-04-09. Sasha Bruns: Following e.g. the Software Ontology (SWO), relations between two ICE are categorized under the overarching property \"is about.\" Consequently, inverse properties become subproperties of a single superproperty (see e.g. swo:is_license_for and swo:has_license)."@en)
AnnotationAssertion(rdfs:comment :sparqlEndpointOf "inverse of  property \"sparql endpoint\""@en)
AnnotationAssertion(rdfs:isDefinedBy :sparqlEndpointOf <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :sparqlEndpointOf "sparql endpoint of"@en)
SubObjectPropertyOf(:sparqlEndpointOf <http://purl.obolibrary.org/obo/IAO_0000136>)

# Object Property: :specification (has specification)

AnnotationAssertion(rdfs:comment :specification "The property is a relationship between a resource and the international standard or norm."@en)
AnnotationAssertion(rdfs:isDefinedBy :specification <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :specification "has specification"@en)
SubObjectPropertyOf(:specification :NFDI_0000100)
InverseObjectProperties(:specification :specificationOf)
ObjectPropertyDomain(:specification :Resource)
ObjectPropertyRange(:specification :Specification)

# Object Property: :specificationOf (specification of)

AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000116> :specificationOf "2024-04-09. Sasha Bruns: Following e.g. the Software Ontology (SWO), relations between two ICE are categorized under the overarching property \"is about.\" Consequently, inverse properties become subproperties of a single superproperty (see e.g. swo:is_license_for and swo:has_license)."@en)
AnnotationAssertion(rdfs:comment :specificationOf "inverse of  property \"specification\""@en)
AnnotationAssertion(rdfs:isDefinedBy :specificationOf <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :specificationOf "specification of"@en)
SubObjectPropertyOf(:specificationOf <http://purl.obolibrary.org/obo/IAO_0000136>)

# Object Property: :standard (has standard)

AnnotationAssertion(rdfs:comment :standard "The property relates a resource to the standard it relies on."@en)
AnnotationAssertion(rdfs:isDefinedBy :standard <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :standard "has standard"@en)
SubObjectPropertyOf(:standard :NFDI_0000100)
InverseObjectProperties(:standard :standardOf)
ObjectPropertyDomain(:standard :Resource)
ObjectPropertyRange(:standard :Standard)

# Object Property: :standardOf (standard of)

AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000116> :standardOf "2024-04-09. Sasha Bruns: Following e.g. the Software Ontology (SWO), relations between two ICE are categorized under the overarching property \"is about.\" Consequently, inverse properties become subproperties of a single superproperty (see e.g. swo:is_license_for and swo:has_license)."@en)
AnnotationAssertion(rdfs:comment :standardOf "inverse of  property \"standard\""@en)
AnnotationAssertion(rdfs:isDefinedBy :standardOf <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :standardOf "standard of"@en)
SubObjectPropertyOf(:standardOf <http://purl.obolibrary.org/obo/IAO_0000136>)

# Object Property: :subjectArea (subject area)

AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000232> :subjectArea "to check for BFO superproperty")
AnnotationAssertion(rdfs:comment :subjectArea "The property establishes a connection between a resource, an agent, or a project, and the academic discipline, subject area, or domain within which they operate."@en)
AnnotationAssertion(rdfs:isDefinedBy :subjectArea <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :subjectArea "subject area"@en)
InverseObjectProperties(:subjectArea :subjectAreaOf)
ObjectPropertyDomain(:subjectArea ObjectUnionOf(:Agent :Project :Resource))
ObjectPropertyRange(:subjectArea :AcademicDiscipline)

# Object Property: :subjectAreaOf (subject area of)

AnnotationAssertion(rdfs:comment :subjectAreaOf "inverse of  property \"subject area\""@en)
AnnotationAssertion(rdfs:isDefinedBy :subjectAreaOf <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :subjectAreaOf "subject area of"@en)
SubObjectPropertyOf(:subjectAreaOf <http://purl.obolibrary.org/obo/RO_0000080>)

# Object Property: :subsidiaryOrganization (has subsidiary organization)

AnnotationAssertion(rdfs:comment :subsidiaryOrganization "inverse of \"parent organization\""@en)
AnnotationAssertion(rdfs:isDefinedBy :subsidiaryOrganization <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :subsidiaryOrganization "has subsidiary organization"@en)

# Object Property: :technology (has technology)

AnnotationAssertion(rdfs:comment :technology "The property is a relationship between a resource and a technology it uses. "@en)
AnnotationAssertion(rdfs:isDefinedBy :technology <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :technology "has technology"@en)
SubObjectPropertyOf(:technology :NFDI_0000100)
InverseObjectProperties(:technology :technologyOf)
ObjectPropertyDomain(:technology :Resource)
ObjectPropertyRange(:technology :TechnologicalMeans)

# Object Property: :technologyOf (technology of)

AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000116> :technologyOf "2024-04-09. Sasha Bruns: Following e.g. the Software Ontology (SWO), relations between two ICE are categorized under the overarching property \"is about.\" Consequently, inverse properties become subproperties of a single superproperty (see e.g. swo:is_license_for and swo:has_license)."@en)
AnnotationAssertion(rdfs:comment :technologyOf "inverse of  property \"technology\""@en)
AnnotationAssertion(rdfs:isDefinedBy :technologyOf <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :technologyOf "technology of"@en)
SubObjectPropertyOf(:technologyOf <http://purl.obolibrary.org/obo/IAO_0000136>)

# Object Property: :url (url)

AnnotationAssertion(rdfs:comment :url "The property is a relationship between a thing and a url associated with the thing."@en)
AnnotationAssertion(rdfs:isDefinedBy :url <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :url "url"@en)
SubObjectPropertyOf(:url <http://purl.obolibrary.org/obo/IAO_0000235>)
InverseObjectProperties(:url :urlOf)
ObjectPropertyDomain(:url owl:Thing)
ObjectPropertyRange(:url owl:Thing)

# Object Property: :urlOf (url of)

AnnotationAssertion(rdfs:comment :urlOf "inverse of  property \"url\""@en)
AnnotationAssertion(rdfs:isDefinedBy :urlOf <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :urlOf "url of"@en)
SubObjectPropertyOf(:urlOf <http://purl.obolibrary.org/obo/IAO_0000219>)


############################
#   Data Properties
############################

# Data Property: :birthDate (birth date)

AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000116> :birthDate "The range has been set to \"Literal\" because we expect \"untidy\" data, i.e. for most datums a structured value cannot be obtained through parsing."@en)
AnnotationAssertion(rdfs:comment :birthDate "The property refers to the date on which a person was born."@en)
AnnotationAssertion(rdfs:isDefinedBy :birthDate <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :birthDate "birth date"@en)
DataPropertyDomain(:birthDate :Person)
DataPropertyRange(:birthDate rdfs:Literal)

# Data Property: :deathDate (death date)

AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000116> :deathDate "The range has been set to \"Literal\" because we expect \"untidy\" data, i.e. for most datums a structured value cannot be obtained through parsing.")
AnnotationAssertion(rdfs:comment :deathDate "The property refers to the date on which a person passed away."@en)
AnnotationAssertion(rdfs:isDefinedBy :deathDate <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :deathDate "death date"@en)
DataPropertyDomain(:deathDate :Person)
DataPropertyRange(:deathDate rdfs:Literal)

# Data Property: :dissolutionDate (dissolution date)

AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000116> :dissolutionDate "The range has been set to \"Literal\" because we expect \"untidy\" data, i.e. for most datums a structured value cannot be obtained through parsing.")
AnnotationAssertion(rdfs:comment :dissolutionDate "The property refers to the date on which the organization ceased to exist or was formally dissolved."@en)
AnnotationAssertion(rdfs:isDefinedBy :dissolutionDate <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :dissolutionDate "dissolution date"@en)
DataPropertyDomain(:dissolutionDate :Organization)
DataPropertyRange(:dissolutionDate rdfs:Literal)

# Data Property: :emailAddress (email address)

AnnotationAssertion(rdfs:comment :emailAddress "The property relates an agent to their email address."@en)
AnnotationAssertion(rdfs:isDefinedBy :emailAddress <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :emailAddress "email address"@en)
DataPropertyDomain(:emailAddress :Agent)
DataPropertyRange(:emailAddress rdfs:Literal)

# Data Property: :endDate (end date)

AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000116> :endDate "The range has been set to \"Literal\" because we expect \"untidy\" data, i.e. for most datums a structured value cannot be obtained through parsing.")
AnnotationAssertion(rdfs:comment :endDate "The property refers to the moment in time when an event ends."@en)
AnnotationAssertion(rdfs:isDefinedBy :endDate <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :endDate "end date"@en)
DataPropertyDomain(:endDate :Event)
DataPropertyRange(:endDate rdfs:Literal)

# Data Property: :fileExtension (file extension)

AnnotationAssertion(rdfs:comment :fileExtension "An identifier for a file format (e.g. txt for a text file) used as a suffix to the file name, don't use dot at start."@en)
AnnotationAssertion(rdfs:isDefinedBy :fileExtension <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :fileExtension "file extension")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#example> :fileExtension "mp4")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#example> :fileExtension "ttl")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#example> :fileExtension "txt")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#example> :fileExtension "xml")
DataPropertyDomain(:fileExtension :Resource)

# Data Property: :foundationDate (foundation date)

AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000116> :foundationDate "The range has been set to \"Literal\" because we expect \"untidy\" data, i.e. for most datums a structured value cannot be obtained through parsing.")
AnnotationAssertion(rdfs:comment :foundationDate "The property refers to the specific date on which the organization was officially established or founded."@en)
AnnotationAssertion(rdfs:isDefinedBy :foundationDate <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :foundationDate "foundation date"@en)
DataPropertyDomain(:foundationDate :Organization)
DataPropertyRange(:foundationDate rdfs:Literal)

# Data Property: :startDate (start date)

AnnotationAssertion(<http://purl.obolibrary.org/obo/IAO_0000116> :startDate "The range has been set to \"Literal\" because we expect \"untidy\" data, i.e. for most datums a structured value cannot be obtained through parsing.")
AnnotationAssertion(rdfs:comment :startDate "The property refers to the moment in time when an event begins."@en)
AnnotationAssertion(rdfs:isDefinedBy :startDate <https://nfdi.fiz-karlsruhe.de/ontology>)
AnnotationAssertion(rdfs:label :startDate "start date"@en)
DataPropertyDomain(:startDate :Event)
DataPropertyRange(:startDate rdfs:Literal)



############################
#   Classes
############################

# Class: :CreativeWork (creative work)

SubClassOf(:CreativeWork ObjectIntersectionOf(:Resource <https://schema.org/CreativeWork>))

# Class: :NFDI_0000005 (service product)

SubClassOf(:NFDI_0000005 <https://schema.org/Service>)

# Class: :NFDI_0000101 (service)

AnnotationAssertion(rdfs:label :NFDI_0000101 "service"@de)


DLSafeRule(Annotation(<http://swrl.stanford.edu/ontologies/3.3/swrla.owl#isRuleEnabled> "true"^^xsd:boolean) Annotation(rdfs:comment "") Annotation(rdfs:label "Publisher") Body(ClassAtom(:Agent Variable(:a)) ClassAtom(:Resource Variable(:r)) ClassAtom(<http://purl.obolibrary.org/obo/IAO_0000444> Variable(:p)) ClassAtom(:PublisherRole Variable(:pr)) ObjectPropertyAtom(<http://purl.obolibrary.org/obo/RO_0000056> Variable(:a) Variable(:p)) ObjectPropertyAtom(<http://purl.obolibrary.org/obo/RO_0000056> Variable(:r) Variable(:p)) ObjectPropertyAtom(<http://purl.obolibrary.org/obo/RO_0000087> Variable(:a) Variable(:pr)) ObjectPropertyAtom(<http://purl.obolibrary.org/obo/BFO_0000054> Variable(:pr) Variable(:p)))Head(ObjectPropertyAtom(:publisherOf Variable(:a) Variable(:r))))
DLSafeRule(Annotation(<http://swrl.stanford.edu/ontologies/3.3/swrla.owl#isRuleEnabled> "true"^^xsd:boolean) Annotation(rdfs:comment "") Annotation(rdfs:label "Contact Point of Resource") Body(ClassAtom(:Agent Variable(:a)) ClassAtom(:Resource Variable(:r)) ClassAtom(:Contacting Variable(:p)) ClassAtom(:ContactPointRole Variable(:cr)) ObjectPropertyAtom(<http://purl.obolibrary.org/obo/RO_0000087> Variable(:a) Variable(:cr)) ObjectPropertyAtom(<http://purl.obolibrary.org/obo/RO_0000056> Variable(:a) Variable(:p)) ObjectPropertyAtom(<http://purl.obolibrary.org/obo/RO_0000056> Variable(:r) Variable(:p)) ObjectPropertyAtom(<http://purl.obolibrary.org/obo/BFO_0000054> Variable(:cr) Variable(:p)))Head(ObjectPropertyAtom(:contactPointOf Variable(:a) Variable(:r))))
DLSafeRule(Annotation(<http://swrl.stanford.edu/ontologies/3.3/swrla.owl#isRuleEnabled> "true"^^xsd:boolean) Annotation(rdfs:comment "") Annotation(rdfs:label "Contact Point of Project") Body(ClassAtom(:Agent Variable(:a)) ClassAtom(:Project Variable(:p)) ClassAtom(:ContactPointRole Variable(:cr)) ObjectPropertyAtom(<http://purl.obolibrary.org/obo/RO_0000087> Variable(:a) Variable(:cr)) ObjectPropertyAtom(<http://purl.obolibrary.org/obo/RO_0000056> Variable(:a) Variable(:p)) ObjectPropertyAtom(<http://purl.obolibrary.org/obo/BFO_0000054> Variable(:cr) Variable(:p)))Head(ObjectPropertyAtom(:contactPointOf Variable(:a) Variable(:p))))
DLSafeRule(Annotation(<http://swrl.stanford.edu/ontologies/3.3/swrla.owl#isRuleEnabled> "true"^^xsd:boolean) Annotation(rdfs:comment "") Annotation(rdfs:label "Contributor") Body(ClassAtom(:Agent Variable(:a)) ClassAtom(:Resource Variable(:r)) ClassAtom(:Contributing Variable(:p)) ClassAtom(:ContributorRole Variable(:cr)) ObjectPropertyAtom(<http://purl.obolibrary.org/obo/RO_0000056> Variable(:a) Variable(:p)) ObjectPropertyAtom(<http://purl.obolibrary.org/obo/RO_0000056> Variable(:r) Variable(:p)) ObjectPropertyAtom(<http://purl.obolibrary.org/obo/RO_0000087> Variable(:a) Variable(:cr)) ObjectPropertyAtom(<http://purl.obolibrary.org/obo/BFO_0000054> Variable(:cr) Variable(:p)))Head(ObjectPropertyAtom(:contributorOf Variable(:a) Variable(:r))))
DLSafeRule(Annotation(<http://swrl.stanford.edu/ontologies/3.3/swrla.owl#isRuleEnabled> "true"^^xsd:boolean) Annotation(rdfs:comment "") Annotation(rdfs:label "Funding Organization") Body(ClassAtom(:Organization Variable(:o)) ClassAtom(:Project Variable(:p)) ClassAtom(:FundingOrganizationRole Variable(:f)) ObjectPropertyAtom(<http://purl.obolibrary.org/obo/RO_0000087> Variable(:o) Variable(:f)) ObjectPropertyAtom(<http://purl.obolibrary.org/obo/BFO_0000054> Variable(:f) Variable(:p)) ObjectPropertyAtom(<http://purl.obolibrary.org/obo/RO_0000056> Variable(:o) Variable(:p)))Head(ObjectPropertyAtom(:fundingOrganization Variable(:p) Variable(:o))))
)